version: '3.9'

services:
  billing:
    build: ./billing
    ports:
      - "8000:8000"
    env_file:
      - ./env_files/billing.env
    healthcheck:
      test: curl --fail http://billing:8000/api/health/ || exit 1
      interval: 10s
      timeout: 5s
      retries: 20
    depends_on:
      payment_db:
        condition: service_healthy

  payment_db:
    image: postgres:15.0-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_HOST=localhost
      - POSTGRES_PORT=5432
    volumes:
      - payment_vol:/var/lib/postgresql/data/
      - ./payment_db/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d:ro
    env_file:
      - env_files/payment_db.env
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -d $$POSTGRES_DB -h $$POSTGRES_HOST -p $$POSTGRES_PORT -U $$POSTGRES_USER"
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  admin_panel:
    build: admin_panel
    volumes:
      - static_vol:/opt/app/static/
    env_file:
      - env_files/admin.env
    expose:
      - "8000"
    depends_on:
      payment_db:
        condition: service_healthy

  scheduler:
    build: ./scheduler
    env_file:
      - ./env_files/scheduler.env
    depends_on:
      payment_db:
        condition: service_healthy

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/configs:/etc/nginx/conf.d:ro
      - access_log_vol:/var/log/nginx
      - static_vol:/data/static:ro
      - ./nginx/data/billing:/data/billing:ro
    depends_on:
      billing:
        condition: service_healthy
    ports:
      - "80:8000"

volumes:
  static_vol:
  payment_vol:
  access_log_vol:
